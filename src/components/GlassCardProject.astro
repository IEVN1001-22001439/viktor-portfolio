---
import "../styles/global.css";

export interface Props {
    title: string;
    description: string;
    imageUrl: string;
    tags?: string[];
    imageGradient?: string;
    cardClass?: string;
    imageClass?: string;
    imagePosition?: "left" | "center" | "right";
    imageRotation?: "none" | "slight-left" | "slight-right" | "moderate";
    imageScale?: "normal" | "small" | "medium";
}

const {
    title = "Project Title",
    description = "Project description",
    imageUrl = "/images/default-project.webp",
    tags = [],
    imageGradient = "from-light-yellow to-light-green",
    cardClass = "",
    imageClass = "",
    imagePosition = "center",
    imageRotation = "none",
    imageScale = "normal",
} = Astro.props;

// Mapeo de posiciones (dentro del recuadro)
const positionClasses = {
    left: "justify-start",
    center: "justify-center",
    right: "justify-end",
};

// Mapeo de rotaciones (solo para la imagen)
const rotationClasses = {
    none: "rotate-0",
    "slight-left": "-rotate-2",
    "slight-right": "rotate-2",
    moderate: "rotate-3",
};

// Mapeo de escalas (solo para la imagen)
const scaleClasses = {
    normal: "w-full h-full",
    small: "w-4/5 h-4/5",
    medium: "w-11/12 h-11/12",
};
---

<article
    class={`
        w-full h-[450px] sm:h-[300px] lg:h-[450px]
        bg-white/10 backdrop-blur-md border-white border-1 inset-shadow-sm shadow-md
        rounded-2xl p-6
        hover:scale-[1.02] transition-all duration-500 hover:bg-white/20 hover:shadow-sm hover:inset-shadow-md
        flex flex-col /* Flex para organizar el contenido */
        ${cardClass}
    `}
>
    <!-- Contenedor de imagen con altura fija -->
    <div class="h-48 flex-shrink-0">
        <!-- Altura fija para la imagen -->
        <div
            class={`w-full h-full bg-gradient-to-tl ${imageGradient} rounded-2xl overflow-hidden relative perspective-1000`}
        >
            <!-- Contenedor interno para la imagen con transformaciones -->
            <div
                class={`
                w-full h-full flex ${positionClasses[imagePosition]} items-center
                transition-all duration-700 ease-out
            `}
            >
                <div
                    class={`
                    relative ${scaleClasses[imageScale]} ${rotationClasses[imageRotation]}
                    hover:rotate-0 hover:scale-105 transition-all duration-500
                    shadow-lg
                `}
                >
                    <img
                        class="w-full h-full object-cover rounded-xl"
                        src={imageUrl}
                        alt={title}
                        loading="lazy"
                    />
                </div>
            </div>
        </div>
    </div>

    <!-- Contenido de texto que ocupa el espacio restante -->
    <div class="flex-1 flex flex-col justify-between pt-4 min-h-0">
        <!-- flex-1 para ocupar espacio restante -->
        <div class="flex-1 overflow-hidden">
            <!-- Permite scroll si es necesario -->
            <div class="mb-3">
                <h4
                    class="text-black/70 font-semibold text-lg md:text-xl mb-2 line-clamp-2"
                >
                    <!-- Limita a 2 líneas -->
                    {title}
                </h4>
                <h5
                    class="text-black/50 font-light text-sm md:text-base leading-relaxed line-clamp-3"
                >
                    <!-- Limita a 3 líneas -->
                    {description}
                </h5>
            </div>
        </div>

        <!-- Tags en la parte inferior -->
        {
            tags.length > 0 && (
                <div class="flex flex-wrap gap-2 mt-3 pt-3 border-t border-white/20">
                    {tags.map((tag) => (
                        <span
                            class="bg-white/20 border border-white/40 rounded-full py-1.5 px-3 text-black/70 font-medium text-xs
                    hover:bg-white/40 hover:shadow-md hover:shadow-black/10 transition-all duration-300 line-clamp-1"
                        >
                            {tag}
                        </span>
                    ))}
                </div>
            )
        }
    </div>

    <slot />
</article>

<style is:global>
    .perspective-1000 {
        perspective: 1000px;
    }

    * {
        transform-style: preserve-3d;
    }

    /* Utilidades para limitar líneas de texto */
    .line-clamp-2 {
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
    }

    .line-clamp-3 {
        display: -webkit-box;
        -webkit-line-clamp: 3;
        -webkit-box-orient: vertical;
        overflow: hidden;
    }

    .line-clamp-1 {
        display: -webkit-box;
        -webkit-line-clamp: 1;
        -webkit-box-orient: vertical;
        overflow: hidden;
    }
</style>
